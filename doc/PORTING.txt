                Be PORTABLE, in Janus is one of the primary goal.
                Be PORTABLE, in Janus is one of the primary goal.
                Be PORTABLE, in Janus is one of the primary goal.

for this reason, this file has to explain to you, human trying to port Janus
in your weird POSIX system, which requirements exist and how you could check 
and solve your issues.

Janus implements a lot of low level handling in the operating system, anyway
these low level operations have been implemented through the use of external
commands executions.

thus, exist some command executed by Janus, and, for someone wanna do a port:

    MANDATORY IS CHECKING & EVENTUALLY REPLACING WHILE PORTING JANUS IN A 
                NON-EXPLICITALLY-SUPPORTED ENVIRONMENT

The commands are divided in two general sections:

informative commands: command that return a value, used by Janus for get
                      system informations.
                      during the Janus execution, their results are 
                      showed for the launching user, for a better awarness
                      about Janus operations.

mandatory commands: command that execute a variation in the system, no
                    return value is provided, anyway Janus checks if some
                    data is present in the "standard error" file;
                    Janus handles this case as a fatal error, and the users
                    need to check by hand the executed command. 

Handling an error of such will not be common for an user, but will be 
the required effort for everyone wanting to make a Janus port.

command of informative type are:

1 get the default gateway ip address
2 get the network interface used to reach the default gateway ($1)
3 get the ip address of $2 (the network interface at the point 2)
4 get the MTU of $2
5 get the mac address of $2
6 get the mac address of $1

command of mandatory type are:

7 add a default gateway
8 delete a default gateway
9 add a firewall rules able to drop incoming traffic with src mac addr $5
A delete the firewall rules insert with $9
B setup the tun, indexed by the var ~T
C add a firewall rule able to NAT the traffic thru the tunnel $A
D delete the firewall rule insert with $B

everyone command could be a composed one using for example pipes,
semicolons, logic AND, OR, et cetera. For example, get the $1 to $6 will
require the usage of command ifconfig, route, arp and parsing the output with
sed or awk. 

Implementing a command $8 will require, in some system two different firewall 
command (the first intended to drop incoming traffic destinated to the local box,
the second to drop the same traffic that will be forwarded, in the case Janus is
running in a network gateway)

            ************** commands file ****************

Every operating system/implementation/distribution/release has a configuration
file named coherently, in /etc/janus

  /etc/janus/current-os -> /etc/janus/os-commands/Linux-whatever.janus
 
  Linux-whatever.janus is the configuration file containing the commands
  executed to obtain the required effect on the running system.

By default Janus take a look for "current-os", hopefully a symbolic link to the
right file, otherwise will be specify with the option [XXX]

        ************** commands file format ****************

The "current-os" file has three section, the first is related to all the binary 
that need to be checked, and an email address/contact of the package mantainer 
(hey, you, mantainer: keep your reponsability, if something doesn't run correctly, 
accept to receive an email reporting the error)

.. first section sounds like:

N GNU/OSX+Vista I'm the OS's name here supported
M SniffJoke team sniffjoke-team@delirandom.net
C ifconfig
C route
C awk
C grep
[...]

the "M" is the contact to address, the "C" is before every binary that need to 
be checked by "which", if one of them doesn't exist in the system, is reported 
to the user, with the email to contact. the "N", is the OS's name in this file
supported. Is a string printed at every Janus run.

.. second section, the informative commands

I1 #route -n | grep "0.0.0.0" | awk {'print $5'}#

What's does it mean:

  "I": is always present as first char in the informative section
  "1": is the number assigned to the command, and number used for ask the ip
       address of the default gateway as variable named "~1" in this file
  "#": the command executed is between the first # and the second #

The commands in this section are executed before every operation: their goal is
to collect informations over the system, therefore are executed and their output
stored for the usage in the "mandatory commands"

.. third section, mandatory commands

SC #iptables -A POSTROUTING -o ~1 -t nat -j MASQUERADE#
SD #iptables -D POSTROUTING -o ~1 -t nat -j MASQUERADE#

   "S" stay for S. is used in the first line of the third section
   "C" or "D" or "..." is the number assigned to the command;
       but, C and D arenot a numbers !?
       yep, I'm using hex, so until 16 commands and the letter "F" commands are
       numbered
  "~1" using the tilde followed by a number, make Janus import the variable 
       associated with the number. "1" as described, is the interface name.

This cause in short, that the reserved symbol are the "#" and the "~" and the 
format required:

1) N,M,C,I or S at the start of every commands line (permitted "\n" and ";" too)
2) only one command number in the 1st and 2nd sections
3) supports for more that one command number in the 3rd section
4) avoid to use char "#" and "~" in the command line
5) every command in the 2nd and 3rd section will be embraced by "#" at the start
   to the end.
6) the comments start with the semicolon ";"
7) there are three special variable (there indexed by "~"): ~K, ~Z and ~T:
   Z is the fake gateway ip address
   K is the fake MTU usable in the tunnel
   T is the first available tun number
   these value are hardcoded/readed by option/computed inside Janus, therefore
   are called by special parameters.

the best way to write your own commands file, is take a look in those in 
os-confs/ directory.

-- 24/08/2k11
